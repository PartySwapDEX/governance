{
  "contractName": "TreasuryVester",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "party_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "RecipientChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "TokensVested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "VestingEnabled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "halvingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextSlash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "party",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCliff",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient_",
          "type": "address"
        }
      ],
      "name": "setRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"party_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"RecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"TokensVested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VestingEnabled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halvingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextSlash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"party\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"name\":\"setRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Vest the next PARTY allocation. Requires vestingCliff seconds in between calls. PARTY will be distributed to the recipient.\"},\"setRecipient(address)\":{\"notice\":\"Sets the recipient of the vested distributions. In the initial Pangolin scheme, this should be the address of the LiquidityPoolManager. Can only be called by the contract owner.\"},\"startVesting()\":{\"notice\":\"Enable distribution. A sufficient amount of PARTY >= startingBalance must be transferred to the contract before enabling. The recipient must also be set. Can only be called by the owner.\"}},\"notice\":\"Contract to control the release of PARTY.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/pedro/Documents/projects/avalabs/party-swap/party-pinatas/contracts/TreasuryVester.sol\":\"TreasuryVester\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/pedro/Documents/projects/avalabs/party-swap/party-pinatas/contracts/TreasuryVester.sol\":{\"keccak256\":\"0xf31408e23d3c3a03c0b131233c9510e43ed33091a58f6ab60c4627204736d7a7\",\"urls\":[\"bzz-raw://28e172f87854b26f1e952d445208e4ee199cefcee48fddb618457e189e9011b4\",\"dweb:/ipfs/QmXhadCtyEAZMGVcpGH5dfAhnsHUBDcqn1FVEqtSCEcSoD\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9989233808b8f475395f71ea757e277fa167cdac8a24d10f9784783defd313c\",\"dweb:/ipfs/Qmdg6rbPsShpnzvqKmPVuFk7eYU53oXTPxqUJXd9WLD4vg\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f45760003560e01c8063715018a611610097578063c046371111610066578063c04637111461018e578063deb36e3214610196578063f2fde38b1461019e578063f3640e74146101b1576100f4565b8063715018a6146101615780637f87bbd6146101695780638da5cb5b1461017e57806394bd2d3b14610186576100f4565b80633bbed4a0116100d35780633bbed4a0146101345780634e71d92d146101495780635a3e251f1461015157806366d003ac14610159576100f4565b8062728f76146100f957806328485cfb14610117578063354284f21461011f575b600080fd5b6101016101b9565b60405161010e9190610da5565b60405180910390f35b6101016101bf565b6101276101c5565b60405161010e9190610986565b61014761014236600461090b565b6101d4565b005b61010161029e565b610101610409565b61012761040f565b61014761041e565b6101716104a7565b60405161010e91906109b3565b6101276104b0565b6101016104bf565b6101016104c5565b6101476104cb565b6101476101ac36600461090b565b61062e565b6101016106ee565b60045481565b60075481565b6002546001600160a01b031681565b6101dc6106f4565b6001600160a01b03166101ed6104b0565b6001600160a01b03161461021c5760405162461bcd60e51b815260040161021390610cb8565b60405180910390fd5b6001600160a01b0381166102425760405162461bcd60e51b8152600401610213906109f1565b600380546001600160a01b0319166001600160a01b0383811691909117918290556040517fff2d07bd188a9eb41acbc4a7db39e18956c95ab7f54f434d97849bf6206e577c92610293921690610986565b60405180910390a150565b6000600260015414156102c35760405162461bcd60e51b815260040161021390610d6e565b600260015560085460ff166102ea5760405162461bcd60e51b815260040161021390610aed565b6003546001600160a01b031633146103145760405162461bcd60e51b815260040161021390610a9e565b6005546009546103249190610dc5565b4210156103435760405162461bcd60e51b815260040161021390610c75565b60075461037d5760016006546103599190610e1c565b6007556004805461036b906003610dfd565b6103759190610ddd565b60045561038f565b60075461038b9060016106f8565b6007555b426009556003546004546002546103b4926001600160a01b039182169291169061070b565b6004546003546040517f277d5afb43bf7105f031c47c411e874903f073633432bbe9f5b50c848a0349e1926103f69290916001600160a01b0390911690610dae565b60405180910390a1506004546001805590565b60065481565b6003546001600160a01b031681565b6104266106f4565b6001600160a01b03166104376104b0565b6001600160a01b03161461045d5760405162461bcd60e51b815260040161021390610cb8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60085460ff1681565b6000546001600160a01b031690565b600a5481565b60095481565b6104d36106f4565b6001600160a01b03166104e46104b0565b6001600160a01b03161461050a5760405162461bcd60e51b815260040161021390610cb8565b60085460ff161561052d5760405162461bcd60e51b815260040161021390610b8b565b600a546002546040516370a0823160e01b81526001600160a01b03909116906370a0823190610560903090600401610986565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190610952565b10156105ce5760405162461bcd60e51b815260040161021390610b37565b6003546001600160a01b03166105f65760405162461bcd60e51b815260040161021390610c26565b6008805460ff191660011790556040517ff78a71daf05bb8e3a2ef9c526b1bb785285cdb83a6130cd12a3bbd5c99c15fa390600090a1565b6106366106f4565b6001600160a01b03166106476104b0565b6001600160a01b03161461066d5760405162461bcd60e51b815260040161021390610cb8565b6001600160a01b0381166106935760405162461bcd60e51b815260040161021390610a58565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60055481565b3390565b60006107048284610e1c565b9392505050565b6107618363a9059cbb60e01b848460405160240161072a92919061099a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610766565b505050565b60006107bb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107f59092919063ffffffff16565b80519091501561076157808060200190518101906107d99190610932565b6107615760405162461bcd60e51b815260040161021390610d24565b6060610804848460008561080c565b949350505050565b60608247101561082e5760405162461bcd60e51b815260040161021390610be0565b610837856108cc565b6108535760405162461bcd60e51b815260040161021390610ced565b600080866001600160a01b0316858760405161086f919061096a565b60006040518083038185875af1925050503d80600081146108ac576040519150601f19603f3d011682016040523d82523d6000602084013e6108b1565b606091505b50915091506108c18282866108d2565b979650505050505050565b3b151590565b606083156108e1575081610704565b8251156108f15782518084602001fd5b8160405162461bcd60e51b815260040161021391906109be565b60006020828403121561091c578081fd5b81356001600160a01b0381168114610704578182fd5b600060208284031215610943578081fd5b81518015158114610704578182fd5b600060208284031215610963578081fd5b5051919050565b6000825161097c818460208701610e33565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60006020825282518060208401526109dd816040850160208701610e33565b601f01601f19169190910160400192915050565b60208082526041908201527f54726561737572795665737465723a3a736574526563697069656e743a20526560408201527f63697069656e742063616e277420626520746865207a65726f206164647265736060820152607360f81b608082015260a00190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602f908201527f54726561737572795665737465723a3a636c61696d3a206f6e6c79207265636960408201526e7069656e742063616e20636c61696d60881b606082015260800190565b6020808252602a908201527f54726561737572795665737465723a3a636c61696d3a2076657374696e67206e6040820152691bdd08195b98589b195960b21b606082015260800190565b60208082526034908201527f54726561737572795665737465723a3a737461727456657374696e673a20696e604082015273636f727265637420504152545920737570706c7960601b606082015260800190565b60208082526035908201527f54726561737572795665737465723a3a737461727456657374696e673a2076656040820152741cdd1a5b99c8185b1c9958591e481cdd185c9d1959605a1b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602f908201527f54726561737572795665737465723a3a737461727456657374696e673a20726560408201526e18da5c1a595b9d081b9bdd081cd95d608a1b606082015260800190565b60208082526023908201527f54726561737572795665737465723a3a636c61696d3a206e6f742074696d65206040820152621e595d60ea1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60008219821115610dd857610dd8610e63565b500190565b600082610df857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e1757610e17610e63565b500290565b600082821015610e2e57610e2e610e63565b500390565b60005b83811015610e4e578181015183820152602001610e36565b83811115610e5d576000848401525b50505050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207741bc33feac7c4f889a5b16945d433aecacadac844e6c621423734f9eeeff7164736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:14",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:14",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:14"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:14"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:14"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:14"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:14",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:14",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:14"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:14"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:14",
                "type": ""
              }
            ],
            "src": "14:310:14"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8951:14",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:14",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:14"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:14"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:14"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:14"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:14",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:14",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:14"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:14"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:14",
                "type": ""
              }
            ],
            "src": "14:306:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "403:219:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "449:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:14"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "466:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "451:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "451:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "451:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "424:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "433:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "420:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "420:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "416:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "413:2:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:14"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "488:5:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "566:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "575:6:14"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "583:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "568:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "568:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "568:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "535:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "556:5:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:6:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:13:14"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "542:6:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "542:21:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "532:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "532:32:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:40:14"
                  },
                  "nodeType": "YulIf",
                  "src": "522:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "601:15:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "611:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "380:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "392:6:14",
                "type": ""
              }
            ],
            "src": "325:297:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "708:113:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "754:26:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "763:6:14"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "771:6:14"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "756:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "756:22:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "756:22:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "729:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "725:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "725:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "750:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "721:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "718:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "789:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "805:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "799:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:16:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "789:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "674:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "685:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "697:6:14",
                "type": ""
              }
            ],
            "src": "627:194:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "963:137:14",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "973:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "993:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "987:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "987:13:14"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "977:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1035:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1043:4:14",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1031:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1031:17:14"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1050:3:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1055:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1009:21:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:53:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1009:53:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1071:23:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1082:3:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1087:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1078:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:16:14"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1071:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "939:3:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "944:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "955:3:14",
                "type": ""
              }
            ],
            "src": "826:274:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1206:102:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1216:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1228:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1239:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1224:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1216:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1258:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1273:6:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1289:3:14",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1294:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1285:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1285:11:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1298:1:14",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1281:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1281:19:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1269:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1269:32:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:51:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1175:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1186:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1197:4:14",
                "type": ""
              }
            ],
            "src": "1105:203:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1442:145:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1452:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1464:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1475:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1460:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1452:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1494:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1509:6:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1525:3:14",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1530:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1521:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1521:11:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1534:1:14",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1517:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1517:19:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1505:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1505:32:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1487:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1487:51:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1558:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1569:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1554:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1554:18:14"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1574:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1547:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1547:34:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1403:9:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1414:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1422:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1433:4:14",
                "type": ""
              }
            ],
            "src": "1313:274:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1687:92:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1709:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1705:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1705:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1697:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1739:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1764:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1757:6:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1757:14:14"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1750:6:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1750:22:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1732:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:41:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1732:41:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1656:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1667:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1678:4:14",
                "type": ""
              }
            ],
            "src": "1592:187:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1905:262:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1922:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1933:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1915:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1915:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1915:21:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1945:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1965:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1959:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1959:13:14"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1949:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1992:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2003:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1988:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1988:18:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2008:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1981:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1981:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1981:34:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2050:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2058:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2046:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:15:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2067:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2078:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2063:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2063:18:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2083:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2024:21:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:66:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2024:66:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2099:62:14",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2115:9:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2134:6:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2142:2:14",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2130:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2130:15:14"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2151:2:14",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2147:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2147:7:14"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2126:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2126:29:14"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2111:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2111:45:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2158:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2107:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2107:54:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2099:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1874:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1885:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1896:4:14",
                "type": ""
              }
            ],
            "src": "1784:383:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2346:295:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2363:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2374:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2356:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2356:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2397:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2408:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2393:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2393:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2413:2:14",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2386:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2386:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2386:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2436:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2447:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2432:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2432:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2452:34:14",
                        "type": "",
                        "value": "TreasuryVester::setRecipient: Re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2425:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2425:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2507:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2518:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2503:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2503:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2523:34:14",
                        "type": "",
                        "value": "cipient can't be the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2496:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2496:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2496:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2578:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2589:3:14",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2574:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2574:19:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2595:3:14",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2567:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2567:32:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2567:32:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2608:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2620:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2631:3:14",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2616:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2616:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2608:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_21a9188a11a2ed7e9e344e897bcae828651e0699652ef10f97b730d97fe3ded9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2323:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2337:4:14",
                "type": ""
              }
            ],
            "src": "2172:469:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2820:228:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2837:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2848:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2830:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2830:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2871:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2882:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2867:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2867:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2887:2:14",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2860:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2860:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2860:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2910:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2921:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2906:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2906:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2926:34:14",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2899:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2899:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2899:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2981:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2992:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2977:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2977:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2997:8:14",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2970:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:36:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2970:36:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3015:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3027:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3038:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3023:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3023:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3015:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2797:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2811:4:14",
                "type": ""
              }
            ],
            "src": "2646:402:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3227:237:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3244:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3255:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3237:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3237:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3237:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3278:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3289:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3274:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3274:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3294:2:14",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3267:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3267:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3267:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3317:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3328:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3313:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3313:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3333:34:14",
                        "type": "",
                        "value": "TreasuryVester::claim: only reci"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3306:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3306:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3306:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3388:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3399:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3384:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3384:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3404:17:14",
                        "type": "",
                        "value": "pient can claim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3377:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3377:45:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3377:45:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3431:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3443:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3454:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3439:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3439:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3431:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24808a19e062f7c9e54185932cb1c102ed8ed8327a1dfbd810e02059c9980827__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3204:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3218:4:14",
                "type": ""
              }
            ],
            "src": "3053:411:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3643:232:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3660:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3671:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3653:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3653:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3653:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3694:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3705:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3690:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3690:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3710:2:14",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3683:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3683:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3683:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3733:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3744:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3729:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3729:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3749:34:14",
                        "type": "",
                        "value": "TreasuryVester::claim: vesting n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3722:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3722:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3722:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3804:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3815:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3800:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3800:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3820:12:14",
                        "type": "",
                        "value": "ot enabled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3793:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3793:40:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3793:40:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3842:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3854:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3865:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3850:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3850:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3842:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_39d22efa7bd5c47048b94f701ffe9d8b18922b12c89e3d803d6e0107b5f574fb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3620:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3634:4:14",
                "type": ""
              }
            ],
            "src": "3469:406:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4054:242:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4071:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4082:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4064:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4064:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4064:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4105:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4116:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4101:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4101:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4121:2:14",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4094:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4094:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4144:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4155:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4140:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4140:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4160:34:14",
                        "type": "",
                        "value": "TreasuryVester::startVesting: in"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4133:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4133:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4133:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4215:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4226:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4211:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4211:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4231:22:14",
                        "type": "",
                        "value": "correct PARTY supply"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4204:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4204:50:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4204:50:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4263:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4275:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4286:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4271:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4263:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e857f218999591a6c99fd39f5ebd93541302cb361146be6984d176e08fdd8e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4031:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4045:4:14",
                "type": ""
              }
            ],
            "src": "3880:416:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4475:243:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4492:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4503:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4485:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4485:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4485:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4526:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4537:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4522:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4522:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4542:2:14",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4515:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4515:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4565:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4576:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4561:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4561:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4581:34:14",
                        "type": "",
                        "value": "TreasuryVester::startVesting: ve"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4554:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4554:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4554:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4636:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4647:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4632:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4632:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4652:23:14",
                        "type": "",
                        "value": "sting already started"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4625:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4625:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4625:51:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4685:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4697:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4708:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4693:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4693:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4685:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_40579899b8dc3d5dec94e31eefab92078f52da37e697e0eb581f7e2d544cf524__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4452:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4466:4:14",
                "type": ""
              }
            ],
            "src": "4301:417:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4897:228:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4914:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4925:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4907:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4907:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4907:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4948:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4959:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4944:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4944:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4964:2:14",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4937:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4937:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4937:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4987:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4998:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4983:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4983:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5003:34:14",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4976:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4976:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4976:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5058:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5069:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5054:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5054:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5074:8:14",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5047:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5047:36:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5047:36:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5092:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5104:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5115:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5100:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5100:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5092:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4874:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4888:4:14",
                "type": ""
              }
            ],
            "src": "4723:402:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5304:237:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5321:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5332:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5314:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5314:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5314:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5355:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5366:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5351:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5351:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5371:2:14",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5344:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5344:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5344:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5394:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5405:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5390:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5390:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5410:34:14",
                        "type": "",
                        "value": "TreasuryVester::startVesting: re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5383:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5383:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5383:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5465:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5476:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5461:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5461:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5481:17:14",
                        "type": "",
                        "value": "cipient not set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5454:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5454:45:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5454:45:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5508:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5520:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5531:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5516:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5516:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5508:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_71d75a63adfd6ad1c3dad6899261d89f2d4b03319d662ffe5b7a07f87abd1cb9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5281:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5295:4:14",
                "type": ""
              }
            ],
            "src": "5130:411:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5720:225:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5737:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5748:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5730:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5730:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5730:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5771:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5782:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5767:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5767:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5787:2:14",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5760:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5760:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5760:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5810:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5821:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5806:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5806:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5826:34:14",
                        "type": "",
                        "value": "TreasuryVester::claim: not time "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5799:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5799:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5799:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5881:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5892:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5877:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5877:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5897:5:14",
                        "type": "",
                        "value": "yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5870:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5870:33:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5870:33:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5912:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5924:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5935:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5920:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5920:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5912:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_912c03e905455085d4b75b77e3f70b08e0a333cb61fbb08675e1e5933c40d5f1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5697:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5711:4:14",
                "type": ""
              }
            ],
            "src": "5546:399:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6124:182:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6141:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6152:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6134:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6134:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6134:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6175:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6186:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6171:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6171:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6191:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6164:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6164:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6164:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6214:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6225:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6210:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6210:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6230:34:14",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6203:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6203:62:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6274:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6286:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6297:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6282:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6282:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6274:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6101:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6115:4:14",
                "type": ""
              }
            ],
            "src": "5950:356:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6485:179:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6502:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6513:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6495:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6495:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6495:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6536:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6547:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6532:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6532:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6552:2:14",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6525:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6525:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6525:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6575:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6586:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6571:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6571:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6591:31:14",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6564:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6564:59:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6564:59:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6632:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6644:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6655:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6640:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6640:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6632:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6462:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6476:4:14",
                "type": ""
              }
            ],
            "src": "6311:353:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6843:232:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6860:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6871:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6853:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6853:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6853:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6894:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6905:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6890:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6890:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6910:2:14",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6883:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6883:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6883:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6933:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6944:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6929:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6929:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6949:34:14",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6922:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6922:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6922:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7004:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7015:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7000:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7000:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7020:12:14",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6993:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6993:40:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6993:40:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7042:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7054:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7065:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7050:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7050:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7042:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6820:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6834:4:14",
                "type": ""
              }
            ],
            "src": "6669:406:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7254:181:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7271:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7282:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7264:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7264:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7264:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7305:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7316:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7301:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7301:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7321:2:14",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7294:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7294:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7294:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7344:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7355:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7340:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7340:18:14"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7360:33:14",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7333:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7333:61:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7333:61:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7403:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7415:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7426:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7411:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7411:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7403:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7231:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7245:4:14",
                "type": ""
              }
            ],
            "src": "7080:355:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7541:76:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7551:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7563:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7574:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7559:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7559:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7551:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7593:9:14"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7604:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7586:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7586:25:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7586:25:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7510:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7521:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7532:4:14",
                "type": ""
              }
            ],
            "src": "7440:177:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7751:145:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7761:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7773:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7784:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7769:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7769:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7761:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7803:9:14"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7814:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7796:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7796:25:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7796:25:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7841:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7852:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7837:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7837:18:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7861:6:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7877:3:14",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7882:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7873:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7873:11:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7886:1:14",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7869:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7869:19:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7857:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7857:32:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7830:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7830:60:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7830:60:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7712:9:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7723:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7731:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7742:4:14",
                "type": ""
              }
            ],
            "src": "7622:274:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7949:80:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7976:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7978:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7978:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7978:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7965:1:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7972:1:14"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7968:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7968:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7962:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7962:13:14"
                  },
                  "nodeType": "YulIf",
                  "src": "7959:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8007:16:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8018:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8021:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8014:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8014:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8007:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7932:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7935:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7941:3:14",
                "type": ""
              }
            ],
            "src": "7901:128:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8080:171:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8111:111:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "8132:1:14"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8139:3:14",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8144:10:14",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8135:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8135:20:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8125:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8125:31:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8125:31:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8176:1:14",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8179:4:14",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8169:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8169:15:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8169:15:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "8204:1:14"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8207:4:14",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8197:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8197:15:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8197:15:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8100:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8093:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8093:9:14"
                  },
                  "nodeType": "YulIf",
                  "src": "8090:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8231:14:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8240:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8243:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8236:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8236:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8231:1:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8065:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8068:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8074:1:14",
                "type": ""
              }
            ],
            "src": "8034:217:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8308:116:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8367:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8369:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8369:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8369:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8339:1:14"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8332:6:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8332:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8325:6:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8325:17:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8347:1:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8358:1:14",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8354:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8354:6:14"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8362:1:14"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8350:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8350:14:14"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8344:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8344:21:14"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8321:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8321:45:14"
                  },
                  "nodeType": "YulIf",
                  "src": "8318:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8398:20:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8413:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8416:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8409:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8409:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8398:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8287:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8290:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8296:7:14",
                "type": ""
              }
            ],
            "src": "8256:168:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8478:76:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8500:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8502:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8502:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8502:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8494:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8497:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8491:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8491:8:14"
                  },
                  "nodeType": "YulIf",
                  "src": "8488:2:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8531:17:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8543:1:14"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8546:1:14"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8539:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8539:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8531:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8460:1:14",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8463:1:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8469:4:14",
                "type": ""
              }
            ],
            "src": "8429:125:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8612:205:14",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8622:10:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8631:1:14",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8626:1:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8691:63:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8716:3:14"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8721:1:14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8712:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8712:11:14"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8735:3:14"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8740:1:14"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8731:3:14"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8731:11:14"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8725:5:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8725:18:14"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8705:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8705:39:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8705:39:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8652:1:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8655:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8649:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8649:13:14"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8663:19:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8665:15:14",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8674:1:14"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8677:2:14",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8670:3:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8670:10:14"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8665:1:14"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8645:3:14",
                    "statements": []
                  },
                  "src": "8641:113:14"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8780:31:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8793:3:14"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8798:6:14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8789:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8789:16:14"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8807:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8782:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8782:27:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8782:27:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8769:1:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8772:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8766:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8766:13:14"
                  },
                  "nodeType": "YulIf",
                  "src": "8763:2:14"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8590:3:14",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8595:3:14",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8600:6:14",
                "type": ""
              }
            ],
            "src": "8559:258:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8854:95:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8871:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8878:3:14",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8883:10:14",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8874:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8874:20:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8864:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8864:31:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8864:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8911:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8914:4:14",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8904:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8904:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8904:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8935:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8938:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8928:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8928:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8928:15:14"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8822:127:14"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_21a9188a11a2ed7e9e344e897bcae828651e0699652ef10f97b730d97fe3ded9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"TreasuryVester::setRecipient: Re\")\n        mstore(add(headStart, 96), \"cipient can't be the zero addres\")\n        mstore(add(headStart, 128), \"s\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24808a19e062f7c9e54185932cb1c102ed8ed8327a1dfbd810e02059c9980827__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"TreasuryVester::claim: only reci\")\n        mstore(add(headStart, 96), \"pient can claim\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_39d22efa7bd5c47048b94f701ffe9d8b18922b12c89e3d803d6e0107b5f574fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"TreasuryVester::claim: vesting n\")\n        mstore(add(headStart, 96), \"ot enabled\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e857f218999591a6c99fd39f5ebd93541302cb361146be6984d176e08fdd8e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"TreasuryVester::startVesting: in\")\n        mstore(add(headStart, 96), \"correct PARTY supply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_40579899b8dc3d5dec94e31eefab92078f52da37e697e0eb581f7e2d544cf524__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"TreasuryVester::startVesting: ve\")\n        mstore(add(headStart, 96), \"sting already started\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_71d75a63adfd6ad1c3dad6899261d89f2d4b03319d662ffe5b7a07f87abd1cb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"TreasuryVester::startVesting: re\")\n        mstore(add(headStart, 96), \"cipient not set\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_912c03e905455085d4b75b77e3f70b08e0a333cb61fbb08675e1e5933c40d5f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TreasuryVester::claim: not time \")\n        mstore(add(headStart, 96), \"yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "375:3841:3:-:0;;;672:31;641:62;;781:6;751:36;;968:2;937:33;;1300:34;1267:67;;1748:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:4;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:4;-1:-1:-1;;;;;909:18:4;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:4;942:43;;909:6;;942:43;-1:-1:-1;1637:1:5;1743:22;;1786:5:3;:14;;-1:-1:-1;;;;;;1786:14:3;-1:-1:-1;;;;;1786:14:3;;;;;;;;;;-1:-1:-1;1811:10:3;:14;1847:13;;1835:9;:25;375:3841;;586:96:9;665:10;586:96;:::o;14:310:14:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:14;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:14:o;:::-;375:3841:3;;;;;;",
  "deployedSourceMap": "375:3841:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1024:24;;;:::i;498:20::-;;;:::i;:::-;;;;;;;:::i;2849:288::-;;;;;;:::i;:::-;;:::i;:::-;;3297:917;;;:::i;937:33::-;;;:::i;524:24::-;;;:::i;1700:145:4:-;;;:::i;1055:26:3:-;;;:::i;:::-;;;;;;;:::i;1068:85:4:-;;;:::i;1267:67:3:-;;;:::i;1128:25::-;;;:::i;2097:531::-;;;:::i;1994:240:4:-;;;;;;:::i;:::-;;:::i;751:36:3:-;;;:::i;641:62::-;;;;:::o;1024:24::-;;;;:::o;498:20::-;;;-1:-1:-1;;;;;498:20:3;;:::o;2849:288::-;1291:12:4;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:4;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:4;;1272:68;;;;-1:-1:-1;;;1272:68:4;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2941:24:3;::::1;2920:136;;;;-1:-1:-1::0;;;2920:136:3::1;;;;;;;:::i;:::-;3066:9;:22:::0;;-1:-1:-1;;;;;;3066:22:3::1;-1:-1:-1::0;;;;;3066:22:3;;::::1;::::0;;;::::1;::::0;;;;3103:27:::1;::::0;::::1;::::0;::::1;::::0;3120:9:::1;::::0;3103:27:::1;:::i;:::-;;;;;;;;2849:288:::0;:::o;3297:917::-;3345:7;1680:1:5;2260:7;;:19;;2252:63;;;;-1:-1:-1;;;2252:63:5;;;;;;;:::i;:::-;1680:1;2390:7;:18;3372:14:3::1;::::0;::::1;;3364:69;;;;-1:-1:-1::0;;;3364:69:3::1;;;;;;;:::i;:::-;3478:9;::::0;-1:-1:-1;;;;;3478:9:3::1;3464:10;:23;3443:117;;;;-1:-1:-1::0;;;3443:117:3::1;;;;;;;:::i;:::-;3623:12;;3610:10;;:25;;;;:::i;:::-;3591:15;:44;;3570:126;;;;-1:-1:-1::0;;;3570:126:3::1;;;;;;;:::i;:::-;3776:9;::::0;3772:186:::1;;3834:1;3818:13;;:17;;;;:::i;:::-;3806:9;:29:::0;3887:1:::1;3866:13:::0;;:17:::1;::::0;3882:1:::1;3866:17;:::i;:::-;3865:23;;;;:::i;:::-;3849:13;:39:::0;3772:186:::1;;;3931:9;::::0;:16:::1;::::0;3945:1:::1;3931:13;:16::i;:::-;3919:9;:28:::0;3772:186:::1;4012:15;3999:10;:28:::0;4098:9:::1;::::0;4109:13:::1;::::0;4078:5:::1;::::0;4071:52:::1;::::0;-1:-1:-1;;;;;4078:5:3;;::::1;::::0;4098:9;::::1;::::0;4071:26:::1;:52::i;:::-;4151:13;::::0;4166:9:::1;::::0;4138:38:::1;::::0;::::1;::::0;::::1;::::0;4151:13;;-1:-1:-1;;;;;4166:9:3;;::::1;::::0;4138:38:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;4194:13:3::1;::::0;1637:1:5;2563:22;;3297:917:3;:::o;937:33::-;;;;:::o;524:24::-;;;-1:-1:-1;;;;;524:24:3;;:::o;1700:145:4:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:4;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:4;;1272:68;;;;-1:-1:-1;;;1272:68:4;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:4;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:4::1;::::0;;1700:145::o;1055:26:3:-;;;;;;:::o;1068:85:4:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:4;1068:85;:::o;1267:67:3:-;;;;:::o;1128:25::-;;;;:::o;2097:531::-;1291:12:4;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:4;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:4;;1272:68;;;;-1:-1:-1;;;1272:68:4;;;;;;;:::i;:::-;2172:14:3::1;::::0;::::1;;2171:15;2150:115;;;;-1:-1:-1::0;;;2150:115:3::1;;;;;;;:::i;:::-;2338:15;::::0;2303:5:::1;::::0;2296:38:::1;::::0;-1:-1:-1;;;2296:38:3;;-1:-1:-1;;;;;2303:5:3;;::::1;::::0;2296:23:::1;::::0;:38:::1;::::0;2328:4:::1;::::0;2296:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;2275:156;;;;-1:-1:-1::0;;;2275:156:3::1;;;;;;;:::i;:::-;2462:9;::::0;-1:-1:-1;;;;;2462:9:3::1;2441:117;;;;-1:-1:-1::0;;;2441:117:3::1;;;;;;;:::i;:::-;2568:14;:21:::0;;-1:-1:-1;;2568:21:3::1;2585:4;2568:21;::::0;;2605:16:::1;::::0;::::1;::::0;2568:14:::1;::::0;2605:16:::1;2097:531::o:0;1994:240:4:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:4;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:4;;1272:68;;;;-1:-1:-1;;;1272:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:4;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:4::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:4;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:4::1;-1:-1:-1::0;;;;;2210:17:4;;;::::1;::::0;;;::::1;::::0;;1994:240::o;751:36:3:-;;;;:::o;586:96:9:-;665:10;586:96;:::o;3039::11:-;3097:7;3123:5;3127:1;3123;:5;:::i;:::-;3116:12;3039:96;-1:-1:-1;;;3039:96:11:o;634:175:7:-;716:86;736:5;766:23;;;791:2;795:5;743:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;743:58:7;;;;;;;;;;;;;;-1:-1:-1;;;;;743:58:7;-1:-1:-1;;;;;;743:58:7;;;;;;;;;;716:19;:86::i;:::-;634:175;;;:::o;3022:751::-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:7;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:7;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:7;;;;;;;:::i;3573:193:8:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;3573:193;-1:-1:-1;;;;3573:193:8:o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:8;;;;;;;:::i;:::-;4850:18;4861:6;4850:10;:18::i;:::-;4842:60;;;;-1:-1:-1;;;4842:60:8;;;;;;;:::i;:::-;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:8;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:8:o;718:413::-;1078:20;1116:8;;;718:413::o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:8;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:8;;;;;;;;:::i;14:306:14:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:14;;220:42;;210:2;;281:6;273;266:22;325:297;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:194;;750:2;738:9;729:7;725:23;721:32;718:2;;;771:6;763;756:22;718:2;-1:-1:-1;799:16:14;;708:113;-1:-1:-1;708:113:14:o;826:274::-;;993:6;987:13;1009:53;1055:6;1050:3;1043:4;1035:6;1031:17;1009:53;:::i;:::-;1078:16;;;;;963:137;-1:-1:-1;;963:137:14:o;1105:203::-;-1:-1:-1;;;;;1269:32:14;;;;1251:51;;1239:2;1224:18;;1206:102::o;1313:274::-;-1:-1:-1;;;;;1505:32:14;;;;1487:51;;1569:2;1554:18;;1547:34;1475:2;1460:18;;1442:145::o;1592:187::-;1757:14;;1750:22;1732:41;;1720:2;1705:18;;1687:92::o;1784:383::-;;1933:2;1922:9;1915:21;1965:6;1959:13;2008:6;2003:2;1992:9;1988:18;1981:34;2024:66;2083:6;2078:2;2067:9;2063:18;2058:2;2050:6;2046:15;2024:66;:::i;:::-;2151:2;2130:15;-1:-1:-1;;2126:29:14;2111:45;;;;2158:2;2107:54;;1905:262;-1:-1:-1;;1905:262:14:o;2172:469::-;2374:2;2356:21;;;2413:2;2393:18;;;2386:30;2452:34;2447:2;2432:18;;2425:62;2523:34;2518:2;2503:18;;2496:62;-1:-1:-1;;;2589:3:14;2574:19;;2567:32;2631:3;2616:19;;2346:295::o;2646:402::-;2848:2;2830:21;;;2887:2;2867:18;;;2860:30;2926:34;2921:2;2906:18;;2899:62;-1:-1:-1;;;2992:2:14;2977:18;;2970:36;3038:3;3023:19;;2820:228::o;3053:411::-;3255:2;3237:21;;;3294:2;3274:18;;;3267:30;3333:34;3328:2;3313:18;;3306:62;-1:-1:-1;;;3399:2:14;3384:18;;3377:45;3454:3;3439:19;;3227:237::o;3469:406::-;3671:2;3653:21;;;3710:2;3690:18;;;3683:30;3749:34;3744:2;3729:18;;3722:62;-1:-1:-1;;;3815:2:14;3800:18;;3793:40;3865:3;3850:19;;3643:232::o;3880:416::-;4082:2;4064:21;;;4121:2;4101:18;;;4094:30;4160:34;4155:2;4140:18;;4133:62;-1:-1:-1;;;4226:2:14;4211:18;;4204:50;4286:3;4271:19;;4054:242::o;4301:417::-;4503:2;4485:21;;;4542:2;4522:18;;;4515:30;4581:34;4576:2;4561:18;;4554:62;-1:-1:-1;;;4647:2:14;4632:18;;4625:51;4708:3;4693:19;;4475:243::o;4723:402::-;4925:2;4907:21;;;4964:2;4944:18;;;4937:30;5003:34;4998:2;4983:18;;4976:62;-1:-1:-1;;;5069:2:14;5054:18;;5047:36;5115:3;5100:19;;4897:228::o;5130:411::-;5332:2;5314:21;;;5371:2;5351:18;;;5344:30;5410:34;5405:2;5390:18;;5383:62;-1:-1:-1;;;5476:2:14;5461:18;;5454:45;5531:3;5516:19;;5304:237::o;5546:399::-;5748:2;5730:21;;;5787:2;5767:18;;;5760:30;5826:34;5821:2;5806:18;;5799:62;-1:-1:-1;;;5892:2:14;5877:18;;5870:33;5935:3;5920:19;;5720:225::o;5950:356::-;6152:2;6134:21;;;6171:18;;;6164:30;6230:34;6225:2;6210:18;;6203:62;6297:2;6282:18;;6124:182::o;6311:353::-;6513:2;6495:21;;;6552:2;6532:18;;;6525:30;6591:31;6586:2;6571:18;;6564:59;6655:2;6640:18;;6485:179::o;6669:406::-;6871:2;6853:21;;;6910:2;6890:18;;;6883:30;6949:34;6944:2;6929:18;;6922:62;-1:-1:-1;;;7015:2:14;7000:18;;6993:40;7065:3;7050:19;;6843:232::o;7080:355::-;7282:2;7264:21;;;7321:2;7301:18;;;7294:30;7360:33;7355:2;7340:18;;7333:61;7426:2;7411:18;;7254:181::o;7440:177::-;7586:25;;;7574:2;7559:18;;7541:76::o;7622:274::-;7796:25;;;-1:-1:-1;;;;;7857:32:14;7852:2;7837:18;;7830:60;7784:2;7769:18;;7751:145::o;7901:128::-;;7972:1;7968:6;7965:1;7962:13;7959:2;;;7978:18;;:::i;:::-;-1:-1:-1;8014:9:14;;7949:80::o;8034:217::-;;8100:1;8090:2;;-1:-1:-1;;;8125:31:14;;8179:4;8176:1;8169:15;8207:4;8132:1;8197:15;8090:2;-1:-1:-1;8236:9:14;;8080:171::o;8256:168::-;;8362:1;8358;8354:6;8350:14;8347:1;8344:21;8339:1;8332:9;8325:17;8321:45;8318:2;;;8369:18;;:::i;:::-;-1:-1:-1;8409:9:14;;8308:116::o;8429:125::-;;8497:1;8494;8491:8;8488:2;;;8502:18;;:::i;:::-;-1:-1:-1;8539:9:14;;8478:76::o;8559:258::-;8631:1;8641:113;8655:6;8652:1;8649:13;8641:113;;;8731:11;;;8725:18;8712:11;;;8705:39;8677:2;8670:10;8641:113;;;8772:6;8769:1;8766:13;8763:2;;;8807:1;8798:6;8793:3;8789:16;8782:27;8763:2;;8612:205;;;:::o;8822:127::-;8883:10;8878:3;8874:20;8871:1;8864:31;8914:4;8911:1;8904:15;8938:4;8935:1;8928:15",
  "source": "pragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * Contract to control the release of PARTY.\n */\ncontract TreasuryVester is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    address public party;\n    address public recipient;\n\n    // Amount to distribute at each interval in wei\n    // 16,450 x 8 PARTY = 131,600\n    uint256 public vestingAmount = 131_600_000_000_000_000_000_000;\n\n    // Interval to distribute in seconds\n    uint256 public vestingCliff = 86_400;\n\n    // Number of distribution intervals before the distribution amount halves\n    // Halving should occur once every month\n\n    // 0.75 period\n    uint256 public halvingPeriod = 30;\n\n    // Countdown till the nest halving in days\n    uint256 public nextSlash;\n\n    bool public vestingEnabled;\n\n    // Timestamp of latest distribution\n    uint256 public lastUpdate;\n\n    // Amount of PARTY required to start distributing denominated in wei\n    // Should be 13,015,439 PARTY\n    uint256 public startingBalance = 13_015_439_000_000_000_000_000_000;\n\n    event VestingEnabled();\n    event TokensVested(uint256 amount, address recipient);\n    event RecipientChanged(address recipient);\n\n    // PARTY Distribution plan:\n    // According to the Pangolin Litepaper, we initially will distribute\n    // 175342.465 PARTY per day. Vesting period will be 24 hours: 86400 seconds.\n    // Halving will occur every four years. No leap day. 4 years: 1460 distributions\n\n    constructor(address party_) {\n        party = party_;\n\n        lastUpdate = 0;\n        nextSlash = halvingPeriod;\n    }\n\n    /**\n     * Enable distribution. A sufficient amount of PARTY >= startingBalance must be transferred\n     * to the contract before enabling. The recipient must also be set. Can only be called by\n     * the owner.\n     */\n    function startVesting() external onlyOwner {\n        require(\n            !vestingEnabled,\n            \"TreasuryVester::startVesting: vesting already started\"\n        );\n        require(\n            IERC20(party).balanceOf(address(this)) >= startingBalance,\n            \"TreasuryVester::startVesting: incorrect PARTY supply\"\n        );\n        require(\n            recipient != address(0),\n            \"TreasuryVester::startVesting: recipient not set\"\n        );\n        vestingEnabled = true;\n\n        emit VestingEnabled();\n    }\n\n    /**\n     * Sets the recipient of the vested distributions. In the initial Pangolin scheme, this\n     * should be the address of the LiquidityPoolManager. Can only be called by the contract\n     * owner.\n     */\n    function setRecipient(address recipient_) external onlyOwner {\n        require(\n            recipient_ != address(0),\n            \"TreasuryVester::setRecipient: Recipient can't be the zero address\"\n        );\n        recipient = recipient_;\n        emit RecipientChanged(recipient);\n    }\n\n    /**\n     * Vest the next PARTY allocation. Requires vestingCliff seconds in between calls. PARTY will\n     * be distributed to the recipient.\n     */\n    function claim() external nonReentrant returns (uint256) {\n        require(vestingEnabled, \"TreasuryVester::claim: vesting not enabled\");\n        require(\n            msg.sender == recipient,\n            \"TreasuryVester::claim: only recipient can claim\"\n        );\n        require(\n            block.timestamp >= lastUpdate + vestingCliff,\n            \"TreasuryVester::claim: not time yet\"\n        );\n\n        // If we've finished a halving period, reduce the amount\n        if (nextSlash == 0) {\n            nextSlash = halvingPeriod - 1;\n            vestingAmount = (vestingAmount * 3) / 4;\n        } else {\n            nextSlash = nextSlash.sub(1);\n        }\n\n        // Update the timelock\n        lastUpdate = block.timestamp;\n\n        // Distribute the tokens\n        IERC20(party).safeTransfer(recipient, vestingAmount);\n        emit TokensVested(vestingAmount, recipient);\n\n        return vestingAmount;\n    }\n}\n",
  "sourcePath": "/home/pedro/Documents/projects/avalabs/party-swap/party-pinatas/contracts/TreasuryVester.sol",
  "ast": {
    "absolutePath": "/home/pedro/Documents/projects/avalabs/party-swap/party-pinatas/contracts/TreasuryVester.sol",
    "exportedSymbols": {
      "Address": [
        5108
      ],
      "Context": [
        5131
      ],
      "IERC20": [
        4588
      ],
      "Ownable": [
        4470
      ],
      "ReentrancyGuard": [
        4510
      ],
      "SafeERC20": [
        4812
      ],
      "SafeMath": [
        5516
      ],
      "TreasuryVester": [
        4360
      ]
    },
    "id": 4361,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4138,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4139,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 5517,
        "src": "24:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4140,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 4471,
        "src": "82:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4141,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 4511,
        "src": "135:62:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4142,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 4813,
        "src": "198:65:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4143,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 4589,
        "src": "264:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4145,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4470,
              "src": "402:7:3"
            },
            "id": 4146,
            "nodeType": "InheritanceSpecifier",
            "src": "402:7:3"
          },
          {
            "baseName": {
              "id": 4147,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4510,
              "src": "411:15:3"
            },
            "id": 4148,
            "nodeType": "InheritanceSpecifier",
            "src": "411:15:3"
          }
        ],
        "contractDependencies": [
          4470,
          4510,
          5131
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4144,
          "nodeType": "StructuredDocumentation",
          "src": "322:52:3",
          "text": " Contract to control the release of PARTY."
        },
        "fullyImplemented": true,
        "id": 4360,
        "linearizedBaseContracts": [
          4360,
          4510,
          4470,
          5131
        ],
        "name": "TreasuryVester",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4151,
            "libraryName": {
              "id": 4149,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5516,
              "src": "439:8:3"
            },
            "nodeType": "UsingForDirective",
            "src": "433:27:3",
            "typeName": {
              "id": 4150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4155,
            "libraryName": {
              "id": 4152,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4812,
              "src": "471:9:3"
            },
            "nodeType": "UsingForDirective",
            "src": "465:27:3",
            "typeName": {
              "id": 4154,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4153,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4588,
                "src": "485:6:3"
              },
              "referencedDeclaration": 4588,
              "src": "485:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4588",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "354284f2",
            "id": 4157,
            "mutability": "mutable",
            "name": "party",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "498:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4156,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "498:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "66d003ac",
            "id": 4159,
            "mutability": "mutable",
            "name": "recipient",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "524:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "524:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "00728f76",
            "id": 4162,
            "mutability": "mutable",
            "name": "vestingAmount",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "641:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4160,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "641:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3133315f3630305f3030305f3030305f3030305f3030305f3030305f303030",
              "id": 4161,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "672:31:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_131600000000000000000000_by_1",
                "typeString": "int_const 131600000000000000000000"
              },
              "value": "131_600_000_000_000_000_000_000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3640e74",
            "id": 4165,
            "mutability": "mutable",
            "name": "vestingCliff",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "751:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4163,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "751:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38365f343030",
              "id": 4164,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "781:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86_400"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a3e251f",
            "id": 4168,
            "mutability": "mutable",
            "name": "halvingPeriod",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "937:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4166,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "937:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 4167,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "968:2:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "28485cfb",
            "id": 4170,
            "mutability": "mutable",
            "name": "nextSlash",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "1024:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4169,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1024:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f87bbd6",
            "id": 4172,
            "mutability": "mutable",
            "name": "vestingEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "1055:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4171,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1055:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c0463711",
            "id": 4174,
            "mutability": "mutable",
            "name": "lastUpdate",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "1128:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4173,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1128:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94bd2d3b",
            "id": 4177,
            "mutability": "mutable",
            "name": "startingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "1267:67:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4175,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1267:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31335f3031355f3433395f3030305f3030305f3030305f3030305f3030305f303030",
              "id": 4176,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:34:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_13015439000000000000000000_by_1",
                "typeString": "int_const 13015439000000000000000000"
              },
              "value": "13_015_439_000_000_000_000_000_000"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 4179,
            "name": "VestingEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:2:3"
            },
            "src": "1341:23:3"
          },
          {
            "anonymous": false,
            "id": 4185,
            "name": "TokensVested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4181,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4185,
                  "src": "1388:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4185,
                  "src": "1404:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:35:3"
            },
            "src": "1369:54:3"
          },
          {
            "anonymous": false,
            "id": 4189,
            "name": "RecipientChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "1451:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1450:19:3"
            },
            "src": "1428:42:3"
          },
          {
            "body": {
              "id": 4206,
              "nodeType": "Block",
              "src": "1776:91:3",
              "statements": [
                {
                  "expression": {
                    "id": 4196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4194,
                      "name": "party",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4157,
                      "src": "1786:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4195,
                      "name": "party_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4191,
                      "src": "1794:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1786:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4197,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:14:3"
                },
                {
                  "expression": {
                    "id": 4200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4198,
                      "name": "lastUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4174,
                      "src": "1811:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 4199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1824:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1811:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4201,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:14:3"
                },
                {
                  "expression": {
                    "id": 4204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4202,
                      "name": "nextSlash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4170,
                      "src": "1835:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4203,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4168,
                      "src": "1847:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1835:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4205,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:25:3"
                }
              ]
            },
            "id": 4207,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4191,
                  "mutability": "mutable",
                  "name": "party_",
                  "nodeType": "VariableDeclaration",
                  "scope": 4207,
                  "src": "1760:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1759:16:3"
            },
            "returnParameters": {
              "id": 4193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1776:0:3"
            },
            "scope": 4360,
            "src": "1748:119:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4251,
              "nodeType": "Block",
              "src": "2140:488:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2171:15:3",
                        "subExpression": {
                          "id": 4214,
                          "name": "vestingEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4172,
                          "src": "2172:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a737461727456657374696e673a2076657374696e6720616c72656164792073746172746564",
                        "id": 4216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2200:55:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40579899b8dc3d5dec94e31eefab92078f52da37e697e0eb581f7e2d544cf524",
                          "typeString": "literal_string \"TreasuryVester::startVesting: vesting already started\""
                        },
                        "value": "TreasuryVester::startVesting: vesting already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40579899b8dc3d5dec94e31eefab92078f52da37e697e0eb581f7e2d544cf524",
                          "typeString": "literal_string \"TreasuryVester::startVesting: vesting already started\""
                        }
                      ],
                      "id": 4213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2150:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2150:115:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4218,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:115:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4226,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2328:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TreasuryVester_$4360",
                                    "typeString": "contract TreasuryVester"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TreasuryVester_$4360",
                                    "typeString": "contract TreasuryVester"
                                  }
                                ],
                                "id": 4225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2320:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4224,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2320:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2320:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4221,
                                  "name": "party",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4157,
                                  "src": "2303:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4220,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4588,
                                "src": "2296:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$4588_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2296:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4588",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4527,
                            "src": "2296:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2296:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4229,
                          "name": "startingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4177,
                          "src": "2338:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2296:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a737461727456657374696e673a20696e636f727265637420504152545920737570706c79",
                        "id": 4231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2367:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e857f218999591a6c99fd39f5ebd93541302cb361146be6984d176e08fdd8e7",
                          "typeString": "literal_string \"TreasuryVester::startVesting: incorrect PARTY supply\""
                        },
                        "value": "TreasuryVester::startVesting: incorrect PARTY supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e857f218999591a6c99fd39f5ebd93541302cb361146be6984d176e08fdd8e7",
                          "typeString": "literal_string \"TreasuryVester::startVesting: incorrect PARTY supply\""
                        }
                      ],
                      "id": 4219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2275:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:156:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4233,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:156:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4235,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4159,
                          "src": "2462:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2483:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2475:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4236,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2475:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2475:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2462:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a737461727456657374696e673a20726563697069656e74206e6f7420736574",
                        "id": 4241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2499:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71d75a63adfd6ad1c3dad6899261d89f2d4b03319d662ffe5b7a07f87abd1cb9",
                          "typeString": "literal_string \"TreasuryVester::startVesting: recipient not set\""
                        },
                        "value": "TreasuryVester::startVesting: recipient not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71d75a63adfd6ad1c3dad6899261d89f2d4b03319d662ffe5b7a07f87abd1cb9",
                          "typeString": "literal_string \"TreasuryVester::startVesting: recipient not set\""
                        }
                      ],
                      "id": 4234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2441:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:117:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4243,
                  "nodeType": "ExpressionStatement",
                  "src": "2441:117:3"
                },
                {
                  "expression": {
                    "id": 4246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4244,
                      "name": "vestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4172,
                      "src": "2568:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2585:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2568:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4247,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4248,
                      "name": "VestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4179,
                      "src": "2605:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4250,
                  "nodeType": "EmitStatement",
                  "src": "2600:21:3"
                }
              ]
            },
            "documentation": {
              "id": 4208,
              "nodeType": "StructuredDocumentation",
              "src": "1873:219:3",
              "text": " Enable distribution. A sufficient amount of PARTY >= startingBalance must be transferred\n to the contract before enabling. The recipient must also be set. Can only be called by\n the owner."
            },
            "functionSelector": "deb36e32",
            "id": 4252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4211,
                "modifierName": {
                  "id": 4210,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4419,
                  "src": "2130:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2130:9:3"
              }
            ],
            "name": "startVesting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:2:3"
            },
            "returnParameters": {
              "id": 4212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:0:3"
            },
            "scope": 4360,
            "src": "2097:531:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4278,
              "nodeType": "Block",
              "src": "2910:227:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4261,
                          "name": "recipient_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4255,
                          "src": "2941:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2963:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2955:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4262,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2955:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2955:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2941:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a736574526563697069656e743a20526563697069656e742063616e277420626520746865207a65726f2061646472657373",
                        "id": 4267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2979:67:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21a9188a11a2ed7e9e344e897bcae828651e0699652ef10f97b730d97fe3ded9",
                          "typeString": "literal_string \"TreasuryVester::setRecipient: Recipient can't be the zero address\""
                        },
                        "value": "TreasuryVester::setRecipient: Recipient can't be the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21a9188a11a2ed7e9e344e897bcae828651e0699652ef10f97b730d97fe3ded9",
                          "typeString": "literal_string \"TreasuryVester::setRecipient: Recipient can't be the zero address\""
                        }
                      ],
                      "id": 4260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2920:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2920:136:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4269,
                  "nodeType": "ExpressionStatement",
                  "src": "2920:136:3"
                },
                {
                  "expression": {
                    "id": 4272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4270,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4159,
                      "src": "3066:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4271,
                      "name": "recipient_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4255,
                      "src": "3078:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3066:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4273,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:22:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4275,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4159,
                        "src": "3120:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4274,
                      "name": "RecipientChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4189,
                      "src": "3103:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4277,
                  "nodeType": "EmitStatement",
                  "src": "3098:32:3"
                }
              ]
            },
            "documentation": {
              "id": 4253,
              "nodeType": "StructuredDocumentation",
              "src": "2634:210:3",
              "text": " Sets the recipient of the vested distributions. In the initial Pangolin scheme, this\n should be the address of the LiquidityPoolManager. Can only be called by the contract\n owner."
            },
            "functionSelector": "3bbed4a0",
            "id": 4279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4258,
                "modifierName": {
                  "id": 4257,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4419,
                  "src": "2900:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2900:9:3"
              }
            ],
            "name": "setRecipient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4255,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nodeType": "VariableDeclaration",
                  "scope": 4279,
                  "src": "2871:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2870:20:3"
            },
            "returnParameters": {
              "id": 4259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2910:0:3"
            },
            "scope": 4360,
            "src": "2849:288:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4358,
              "nodeType": "Block",
              "src": "3354:860:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4288,
                        "name": "vestingEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4172,
                        "src": "3372:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a636c61696d3a2076657374696e67206e6f7420656e61626c6564",
                        "id": 4289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3388:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39d22efa7bd5c47048b94f701ffe9d8b18922b12c89e3d803d6e0107b5f574fb",
                          "typeString": "literal_string \"TreasuryVester::claim: vesting not enabled\""
                        },
                        "value": "TreasuryVester::claim: vesting not enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39d22efa7bd5c47048b94f701ffe9d8b18922b12c89e3d803d6e0107b5f574fb",
                          "typeString": "literal_string \"TreasuryVester::claim: vesting not enabled\""
                        }
                      ],
                      "id": 4287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3364:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3364:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4291,
                  "nodeType": "ExpressionStatement",
                  "src": "3364:69:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3464:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3464:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4295,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4159,
                          "src": "3478:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3464:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a636c61696d3a206f6e6c7920726563697069656e742063616e20636c61696d",
                        "id": 4297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3501:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24808a19e062f7c9e54185932cb1c102ed8ed8327a1dfbd810e02059c9980827",
                          "typeString": "literal_string \"TreasuryVester::claim: only recipient can claim\""
                        },
                        "value": "TreasuryVester::claim: only recipient can claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24808a19e062f7c9e54185932cb1c102ed8ed8327a1dfbd810e02059c9980827",
                          "typeString": "literal_string \"TreasuryVester::claim: only recipient can claim\""
                        }
                      ],
                      "id": 4292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3443:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3443:117:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4299,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:117:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4301,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3591:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3591:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4303,
                            "name": "lastUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4174,
                            "src": "3610:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 4304,
                            "name": "vestingCliff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4165,
                            "src": "3623:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3610:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3591:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a636c61696d3a206e6f742074696d6520796574",
                        "id": 4307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3649:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_912c03e905455085d4b75b77e3f70b08e0a333cb61fbb08675e1e5933c40d5f1",
                          "typeString": "literal_string \"TreasuryVester::claim: not time yet\""
                        },
                        "value": "TreasuryVester::claim: not time yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_912c03e905455085d4b75b77e3f70b08e0a333cb61fbb08675e1e5933c40d5f1",
                          "typeString": "literal_string \"TreasuryVester::claim: not time yet\""
                        }
                      ],
                      "id": 4300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3570:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3570:126:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4309,
                  "nodeType": "ExpressionStatement",
                  "src": "3570:126:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4310,
                      "name": "nextSlash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4170,
                      "src": "3776:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3789:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3776:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4336,
                    "nodeType": "Block",
                    "src": "3905:53:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 4334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4329,
                            "name": "nextSlash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4170,
                            "src": "3919:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 4332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3945:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 4330,
                                "name": "nextSlash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4170,
                                "src": "3931:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5395,
                              "src": "3931:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3931:16:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3919:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4335,
                        "nodeType": "ExpressionStatement",
                        "src": "3919:28:3"
                      }
                    ]
                  },
                  "id": 4337,
                  "nodeType": "IfStatement",
                  "src": "3772:186:3",
                  "trueBody": {
                    "id": 4328,
                    "nodeType": "Block",
                    "src": "3792:107:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 4317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4313,
                            "name": "nextSlash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4170,
                            "src": "3806:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4314,
                              "name": "halvingPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4168,
                              "src": "3818:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 4315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3834:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3818:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3806:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4318,
                        "nodeType": "ExpressionStatement",
                        "src": "3806:29:3"
                      },
                      {
                        "expression": {
                          "id": 4326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4319,
                            "name": "vestingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4162,
                            "src": "3849:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4320,
                                    "name": "vestingAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4162,
                                    "src": "3866:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "33",
                                    "id": 4321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3882:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "src": "3866:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 4323,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3865:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 4324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3887:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "3865:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3849:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4327,
                        "nodeType": "ExpressionStatement",
                        "src": "3849:39:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4338,
                      "name": "lastUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4174,
                      "src": "3999:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4339,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4012:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4012:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3999:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4342,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4347,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4159,
                        "src": "4098:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4348,
                        "name": "vestingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4162,
                        "src": "4109:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4344,
                            "name": "party",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4157,
                            "src": "4078:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4343,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4588,
                          "src": "4071:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4588_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4071:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4588",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4619,
                      "src": "4071:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4588_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4588_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4350,
                  "nodeType": "ExpressionStatement",
                  "src": "4071:52:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4352,
                        "name": "vestingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4162,
                        "src": "4151:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4353,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4159,
                        "src": "4166:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4351,
                      "name": "TokensVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4185,
                      "src": "4138:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4138:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4355,
                  "nodeType": "EmitStatement",
                  "src": "4133:43:3"
                },
                {
                  "expression": {
                    "id": 4356,
                    "name": "vestingAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4162,
                    "src": "4194:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4286,
                  "id": 4357,
                  "nodeType": "Return",
                  "src": "4187:20:3"
                }
              ]
            },
            "documentation": {
              "id": 4280,
              "nodeType": "StructuredDocumentation",
              "src": "3143:149:3",
              "text": " Vest the next PARTY allocation. Requires vestingCliff seconds in between calls. PARTY will\n be distributed to the recipient."
            },
            "functionSelector": "4e71d92d",
            "id": 4359,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4283,
                "modifierName": {
                  "id": 4282,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4509,
                  "src": "3323:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3323:12:3"
              }
            ],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3311:2:3"
            },
            "returnParameters": {
              "id": 4286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4285,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4359,
                  "src": "3345:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3344:9:3"
            },
            "scope": 4360,
            "src": "3297:917:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4361,
        "src": "375:3841:3"
      }
    ],
    "src": "0:4217:3"
  },
  "legacyAST": {
    "absolutePath": "/home/pedro/Documents/projects/avalabs/party-swap/party-pinatas/contracts/TreasuryVester.sol",
    "exportedSymbols": {
      "Address": [
        5108
      ],
      "Context": [
        5131
      ],
      "IERC20": [
        4588
      ],
      "Ownable": [
        4470
      ],
      "ReentrancyGuard": [
        4510
      ],
      "SafeERC20": [
        4812
      ],
      "SafeMath": [
        5516
      ],
      "TreasuryVester": [
        4360
      ]
    },
    "id": 4361,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4138,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4139,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 5517,
        "src": "24:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4140,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 4471,
        "src": "82:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4141,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 4511,
        "src": "135:62:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4142,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 4813,
        "src": "198:65:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4143,
        "nodeType": "ImportDirective",
        "scope": 4361,
        "sourceUnit": 4589,
        "src": "264:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4145,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4470,
              "src": "402:7:3"
            },
            "id": 4146,
            "nodeType": "InheritanceSpecifier",
            "src": "402:7:3"
          },
          {
            "baseName": {
              "id": 4147,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4510,
              "src": "411:15:3"
            },
            "id": 4148,
            "nodeType": "InheritanceSpecifier",
            "src": "411:15:3"
          }
        ],
        "contractDependencies": [
          4470,
          4510,
          5131
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4144,
          "nodeType": "StructuredDocumentation",
          "src": "322:52:3",
          "text": " Contract to control the release of PARTY."
        },
        "fullyImplemented": true,
        "id": 4360,
        "linearizedBaseContracts": [
          4360,
          4510,
          4470,
          5131
        ],
        "name": "TreasuryVester",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4151,
            "libraryName": {
              "id": 4149,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5516,
              "src": "439:8:3"
            },
            "nodeType": "UsingForDirective",
            "src": "433:27:3",
            "typeName": {
              "id": 4150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4155,
            "libraryName": {
              "id": 4152,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4812,
              "src": "471:9:3"
            },
            "nodeType": "UsingForDirective",
            "src": "465:27:3",
            "typeName": {
              "id": 4154,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4153,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4588,
                "src": "485:6:3"
              },
              "referencedDeclaration": 4588,
              "src": "485:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4588",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "354284f2",
            "id": 4157,
            "mutability": "mutable",
            "name": "party",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "498:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4156,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "498:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "66d003ac",
            "id": 4159,
            "mutability": "mutable",
            "name": "recipient",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "524:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "524:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "00728f76",
            "id": 4162,
            "mutability": "mutable",
            "name": "vestingAmount",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "641:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4160,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "641:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3133315f3630305f3030305f3030305f3030305f3030305f3030305f303030",
              "id": 4161,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "672:31:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_131600000000000000000000_by_1",
                "typeString": "int_const 131600000000000000000000"
              },
              "value": "131_600_000_000_000_000_000_000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3640e74",
            "id": 4165,
            "mutability": "mutable",
            "name": "vestingCliff",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "751:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4163,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "751:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38365f343030",
              "id": 4164,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "781:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86_400"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a3e251f",
            "id": 4168,
            "mutability": "mutable",
            "name": "halvingPeriod",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "937:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4166,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "937:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 4167,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "968:2:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "28485cfb",
            "id": 4170,
            "mutability": "mutable",
            "name": "nextSlash",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "1024:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4169,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1024:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f87bbd6",
            "id": 4172,
            "mutability": "mutable",
            "name": "vestingEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "1055:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4171,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1055:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c0463711",
            "id": 4174,
            "mutability": "mutable",
            "name": "lastUpdate",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "1128:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4173,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1128:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94bd2d3b",
            "id": 4177,
            "mutability": "mutable",
            "name": "startingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 4360,
            "src": "1267:67:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4175,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1267:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31335f3031355f3433395f3030305f3030305f3030305f3030305f3030305f303030",
              "id": 4176,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1300:34:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_13015439000000000000000000_by_1",
                "typeString": "int_const 13015439000000000000000000"
              },
              "value": "13_015_439_000_000_000_000_000_000"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 4179,
            "name": "VestingEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:2:3"
            },
            "src": "1341:23:3"
          },
          {
            "anonymous": false,
            "id": 4185,
            "name": "TokensVested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4181,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4185,
                  "src": "1388:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4185,
                  "src": "1404:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:35:3"
            },
            "src": "1369:54:3"
          },
          {
            "anonymous": false,
            "id": 4189,
            "name": "RecipientChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "1451:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1450:19:3"
            },
            "src": "1428:42:3"
          },
          {
            "body": {
              "id": 4206,
              "nodeType": "Block",
              "src": "1776:91:3",
              "statements": [
                {
                  "expression": {
                    "id": 4196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4194,
                      "name": "party",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4157,
                      "src": "1786:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4195,
                      "name": "party_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4191,
                      "src": "1794:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1786:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4197,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:14:3"
                },
                {
                  "expression": {
                    "id": 4200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4198,
                      "name": "lastUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4174,
                      "src": "1811:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 4199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1824:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1811:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4201,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:14:3"
                },
                {
                  "expression": {
                    "id": 4204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4202,
                      "name": "nextSlash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4170,
                      "src": "1835:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4203,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4168,
                      "src": "1847:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1835:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4205,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:25:3"
                }
              ]
            },
            "id": 4207,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4191,
                  "mutability": "mutable",
                  "name": "party_",
                  "nodeType": "VariableDeclaration",
                  "scope": 4207,
                  "src": "1760:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1759:16:3"
            },
            "returnParameters": {
              "id": 4193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1776:0:3"
            },
            "scope": 4360,
            "src": "1748:119:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4251,
              "nodeType": "Block",
              "src": "2140:488:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2171:15:3",
                        "subExpression": {
                          "id": 4214,
                          "name": "vestingEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4172,
                          "src": "2172:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a737461727456657374696e673a2076657374696e6720616c72656164792073746172746564",
                        "id": 4216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2200:55:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40579899b8dc3d5dec94e31eefab92078f52da37e697e0eb581f7e2d544cf524",
                          "typeString": "literal_string \"TreasuryVester::startVesting: vesting already started\""
                        },
                        "value": "TreasuryVester::startVesting: vesting already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40579899b8dc3d5dec94e31eefab92078f52da37e697e0eb581f7e2d544cf524",
                          "typeString": "literal_string \"TreasuryVester::startVesting: vesting already started\""
                        }
                      ],
                      "id": 4213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2150:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2150:115:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4218,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:115:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4226,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2328:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TreasuryVester_$4360",
                                    "typeString": "contract TreasuryVester"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TreasuryVester_$4360",
                                    "typeString": "contract TreasuryVester"
                                  }
                                ],
                                "id": 4225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2320:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4224,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2320:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2320:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4221,
                                  "name": "party",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4157,
                                  "src": "2303:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4220,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4588,
                                "src": "2296:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$4588_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2296:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4588",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4527,
                            "src": "2296:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2296:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4229,
                          "name": "startingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4177,
                          "src": "2338:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2296:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a737461727456657374696e673a20696e636f727265637420504152545920737570706c79",
                        "id": 4231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2367:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e857f218999591a6c99fd39f5ebd93541302cb361146be6984d176e08fdd8e7",
                          "typeString": "literal_string \"TreasuryVester::startVesting: incorrect PARTY supply\""
                        },
                        "value": "TreasuryVester::startVesting: incorrect PARTY supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e857f218999591a6c99fd39f5ebd93541302cb361146be6984d176e08fdd8e7",
                          "typeString": "literal_string \"TreasuryVester::startVesting: incorrect PARTY supply\""
                        }
                      ],
                      "id": 4219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2275:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:156:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4233,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:156:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4235,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4159,
                          "src": "2462:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2483:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2475:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4236,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2475:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2475:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2462:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a737461727456657374696e673a20726563697069656e74206e6f7420736574",
                        "id": 4241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2499:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71d75a63adfd6ad1c3dad6899261d89f2d4b03319d662ffe5b7a07f87abd1cb9",
                          "typeString": "literal_string \"TreasuryVester::startVesting: recipient not set\""
                        },
                        "value": "TreasuryVester::startVesting: recipient not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71d75a63adfd6ad1c3dad6899261d89f2d4b03319d662ffe5b7a07f87abd1cb9",
                          "typeString": "literal_string \"TreasuryVester::startVesting: recipient not set\""
                        }
                      ],
                      "id": 4234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2441:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:117:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4243,
                  "nodeType": "ExpressionStatement",
                  "src": "2441:117:3"
                },
                {
                  "expression": {
                    "id": 4246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4244,
                      "name": "vestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4172,
                      "src": "2568:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2585:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2568:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4247,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4248,
                      "name": "VestingEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4179,
                      "src": "2605:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4250,
                  "nodeType": "EmitStatement",
                  "src": "2600:21:3"
                }
              ]
            },
            "documentation": {
              "id": 4208,
              "nodeType": "StructuredDocumentation",
              "src": "1873:219:3",
              "text": " Enable distribution. A sufficient amount of PARTY >= startingBalance must be transferred\n to the contract before enabling. The recipient must also be set. Can only be called by\n the owner."
            },
            "functionSelector": "deb36e32",
            "id": 4252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4211,
                "modifierName": {
                  "id": 4210,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4419,
                  "src": "2130:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2130:9:3"
              }
            ],
            "name": "startVesting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:2:3"
            },
            "returnParameters": {
              "id": 4212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:0:3"
            },
            "scope": 4360,
            "src": "2097:531:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4278,
              "nodeType": "Block",
              "src": "2910:227:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4261,
                          "name": "recipient_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4255,
                          "src": "2941:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2963:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2955:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4262,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2955:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2955:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2941:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a736574526563697069656e743a20526563697069656e742063616e277420626520746865207a65726f2061646472657373",
                        "id": 4267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2979:67:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21a9188a11a2ed7e9e344e897bcae828651e0699652ef10f97b730d97fe3ded9",
                          "typeString": "literal_string \"TreasuryVester::setRecipient: Recipient can't be the zero address\""
                        },
                        "value": "TreasuryVester::setRecipient: Recipient can't be the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21a9188a11a2ed7e9e344e897bcae828651e0699652ef10f97b730d97fe3ded9",
                          "typeString": "literal_string \"TreasuryVester::setRecipient: Recipient can't be the zero address\""
                        }
                      ],
                      "id": 4260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2920:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2920:136:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4269,
                  "nodeType": "ExpressionStatement",
                  "src": "2920:136:3"
                },
                {
                  "expression": {
                    "id": 4272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4270,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4159,
                      "src": "3066:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4271,
                      "name": "recipient_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4255,
                      "src": "3078:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3066:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4273,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:22:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4275,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4159,
                        "src": "3120:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4274,
                      "name": "RecipientChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4189,
                      "src": "3103:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4277,
                  "nodeType": "EmitStatement",
                  "src": "3098:32:3"
                }
              ]
            },
            "documentation": {
              "id": 4253,
              "nodeType": "StructuredDocumentation",
              "src": "2634:210:3",
              "text": " Sets the recipient of the vested distributions. In the initial Pangolin scheme, this\n should be the address of the LiquidityPoolManager. Can only be called by the contract\n owner."
            },
            "functionSelector": "3bbed4a0",
            "id": 4279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4258,
                "modifierName": {
                  "id": 4257,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4419,
                  "src": "2900:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2900:9:3"
              }
            ],
            "name": "setRecipient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4255,
                  "mutability": "mutable",
                  "name": "recipient_",
                  "nodeType": "VariableDeclaration",
                  "scope": 4279,
                  "src": "2871:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2870:20:3"
            },
            "returnParameters": {
              "id": 4259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2910:0:3"
            },
            "scope": 4360,
            "src": "2849:288:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4358,
              "nodeType": "Block",
              "src": "3354:860:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4288,
                        "name": "vestingEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4172,
                        "src": "3372:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a636c61696d3a2076657374696e67206e6f7420656e61626c6564",
                        "id": 4289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3388:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39d22efa7bd5c47048b94f701ffe9d8b18922b12c89e3d803d6e0107b5f574fb",
                          "typeString": "literal_string \"TreasuryVester::claim: vesting not enabled\""
                        },
                        "value": "TreasuryVester::claim: vesting not enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39d22efa7bd5c47048b94f701ffe9d8b18922b12c89e3d803d6e0107b5f574fb",
                          "typeString": "literal_string \"TreasuryVester::claim: vesting not enabled\""
                        }
                      ],
                      "id": 4287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3364:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3364:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4291,
                  "nodeType": "ExpressionStatement",
                  "src": "3364:69:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3464:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3464:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4295,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4159,
                          "src": "3478:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3464:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a636c61696d3a206f6e6c7920726563697069656e742063616e20636c61696d",
                        "id": 4297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3501:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24808a19e062f7c9e54185932cb1c102ed8ed8327a1dfbd810e02059c9980827",
                          "typeString": "literal_string \"TreasuryVester::claim: only recipient can claim\""
                        },
                        "value": "TreasuryVester::claim: only recipient can claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24808a19e062f7c9e54185932cb1c102ed8ed8327a1dfbd810e02059c9980827",
                          "typeString": "literal_string \"TreasuryVester::claim: only recipient can claim\""
                        }
                      ],
                      "id": 4292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3443:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3443:117:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4299,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:117:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4301,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3591:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3591:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4303,
                            "name": "lastUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4174,
                            "src": "3610:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 4304,
                            "name": "vestingCliff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4165,
                            "src": "3623:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3610:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3591:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726561737572795665737465723a3a636c61696d3a206e6f742074696d6520796574",
                        "id": 4307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3649:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_912c03e905455085d4b75b77e3f70b08e0a333cb61fbb08675e1e5933c40d5f1",
                          "typeString": "literal_string \"TreasuryVester::claim: not time yet\""
                        },
                        "value": "TreasuryVester::claim: not time yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_912c03e905455085d4b75b77e3f70b08e0a333cb61fbb08675e1e5933c40d5f1",
                          "typeString": "literal_string \"TreasuryVester::claim: not time yet\""
                        }
                      ],
                      "id": 4300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3570:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3570:126:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4309,
                  "nodeType": "ExpressionStatement",
                  "src": "3570:126:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4310,
                      "name": "nextSlash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4170,
                      "src": "3776:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3789:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3776:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4336,
                    "nodeType": "Block",
                    "src": "3905:53:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 4334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4329,
                            "name": "nextSlash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4170,
                            "src": "3919:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 4332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3945:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 4330,
                                "name": "nextSlash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4170,
                                "src": "3931:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5395,
                              "src": "3931:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3931:16:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3919:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4335,
                        "nodeType": "ExpressionStatement",
                        "src": "3919:28:3"
                      }
                    ]
                  },
                  "id": 4337,
                  "nodeType": "IfStatement",
                  "src": "3772:186:3",
                  "trueBody": {
                    "id": 4328,
                    "nodeType": "Block",
                    "src": "3792:107:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 4317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4313,
                            "name": "nextSlash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4170,
                            "src": "3806:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4314,
                              "name": "halvingPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4168,
                              "src": "3818:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 4315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3834:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3818:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3806:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4318,
                        "nodeType": "ExpressionStatement",
                        "src": "3806:29:3"
                      },
                      {
                        "expression": {
                          "id": 4326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4319,
                            "name": "vestingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4162,
                            "src": "3849:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4320,
                                    "name": "vestingAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4162,
                                    "src": "3866:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "33",
                                    "id": 4321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3882:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "src": "3866:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 4323,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3865:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 4324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3887:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "3865:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3849:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4327,
                        "nodeType": "ExpressionStatement",
                        "src": "3849:39:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4338,
                      "name": "lastUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4174,
                      "src": "3999:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4339,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4012:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4012:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3999:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4342,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4347,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4159,
                        "src": "4098:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4348,
                        "name": "vestingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4162,
                        "src": "4109:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4344,
                            "name": "party",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4157,
                            "src": "4078:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4343,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4588,
                          "src": "4071:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4588_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4071:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4588",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4619,
                      "src": "4071:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4588_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4588_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4350,
                  "nodeType": "ExpressionStatement",
                  "src": "4071:52:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4352,
                        "name": "vestingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4162,
                        "src": "4151:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4353,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4159,
                        "src": "4166:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4351,
                      "name": "TokensVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4185,
                      "src": "4138:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4138:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4355,
                  "nodeType": "EmitStatement",
                  "src": "4133:43:3"
                },
                {
                  "expression": {
                    "id": 4356,
                    "name": "vestingAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4162,
                    "src": "4194:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4286,
                  "id": 4357,
                  "nodeType": "Return",
                  "src": "4187:20:3"
                }
              ]
            },
            "documentation": {
              "id": 4280,
              "nodeType": "StructuredDocumentation",
              "src": "3143:149:3",
              "text": " Vest the next PARTY allocation. Requires vestingCliff seconds in between calls. PARTY will\n be distributed to the recipient."
            },
            "functionSelector": "4e71d92d",
            "id": 4359,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4283,
                "modifierName": {
                  "id": 4282,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4509,
                  "src": "3323:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3323:12:3"
              }
            ],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3311:2:3"
            },
            "returnParameters": {
              "id": 4286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4285,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4359,
                  "src": "3345:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3344:9:3"
            },
            "scope": 4360,
            "src": "3297:917:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4361,
        "src": "375:3841:3"
      }
    ],
    "src": "0:4217:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-11-10T19:01:26.847Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim()": {
        "notice": "Vest the next PARTY allocation. Requires vestingCliff seconds in between calls. PARTY will be distributed to the recipient."
      },
      "setRecipient(address)": {
        "notice": "Sets the recipient of the vested distributions. In the initial Pangolin scheme, this should be the address of the LiquidityPoolManager. Can only be called by the contract owner."
      },
      "startVesting()": {
        "notice": "Enable distribution. A sufficient amount of PARTY >= startingBalance must be transferred to the contract before enabling. The recipient must also be set. Can only be called by the owner."
      }
    },
    "notice": "Contract to control the release of PARTY.",
    "version": 1
  }
}